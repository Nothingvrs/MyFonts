#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–µ–π—à–∏–π —Ç–µ—Å—Ç PaddleOCR –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
"""
import sys
import os
import numpy as np
import cv2

print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ PaddleOCR")
print("=" * 50)

# 1. –ü—Ä–æ–≤–µ—Ä–∏–º –≤–µ—Ä—Å–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫
print("üì¶ –í–µ—Ä—Å–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫:")
try:
    import paddlepaddle
    print(f"  - PaddlePaddle: {paddlepaddle.__version__}")
except:
    print("  - PaddlePaddle: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")

try:
    import paddleocr
    print(f"  - PaddleOCR: {paddleocr.__version__}")
except:
    print("  - PaddleOCR: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")

print(f"  - OpenCV: {cv2.__version__}")
print(f"  - NumPy: {np.__version__}")

# 2. –ü–æ–ø—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å PaddleOCR
print("\nüîÑ –ò–º–ø–æ—Ä—Ç PaddleOCR...")
try:
    from paddleocr import PaddleOCR
    print("‚úÖ PaddleOCR –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    sys.exit(1)

# 3. –°–æ–∑–¥–∞–¥–∏–º –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
print("\nüñºÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
test_image = np.ones((100, 400, 3), dtype=np.uint8) * 255  # –ë–µ–ª—ã–π —Ñ–æ–Ω
cv2.putText(test_image, 'HELLO WORLD', (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 0), 2)

# –°–æ—Ö—Ä–∞–Ω–∏–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
cv2.imwrite('test_image.png', test_image)
print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: test_image.png")

# 4. –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å PaddleOCR –æ–±—ä–µ–∫—Ç
print("\nüöÄ –°–æ–∑–¥–∞–Ω–∏–µ PaddleOCR –æ–±—ä–µ–∫—Ç–∞...")
try:
    # –°–∞–º–∞—è –ø—Ä–æ—Å—Ç–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    ocr = PaddleOCR(lang='en', use_angle_cls=False)
    print("‚úÖ PaddleOCR –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PaddleOCR: {e}")
    print(f"üí° –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
    sys.exit(1)

# 5. –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç
print("\nüìñ –¢–µ—Å—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è...")
try:
    result = ocr.ocr(test_image)
    print(f"‚úÖ OCR –≤—ã–ø–æ–ª–Ω–µ–Ω, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    
    if result and result[0]:
        for line in result[0]:
            text = line[1][0]
            confidence = line[1][1]
            print(f"  üìù –ù–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç: '{text}' (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.2f})")
    else:
        print("‚ö†Ô∏è –¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ OCR: {e}")
    print(f"üí° –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")

# 6. –ü–æ–ø—Ä–æ–±—É–µ–º —Å —Ä—É—Å—Å–∫–∏–º —è–∑—ã–∫–æ–º
print("\nüá∑üá∫ –¢–µ—Å—Ç —Å —Ä—É—Å—Å–∫–∏–º —è–∑—ã–∫–æ–º...")
try:
    # –°–æ–∑–¥–∞–¥–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ä—É—Å—Å–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º
    russian_image = np.ones((100, 400, 3), dtype=np.uint8) * 255
    cv2.putText(russian_image, 'PRIVET MIR', (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 0), 2)
    cv2.imwrite('test_russian.png', russian_image)
    
    # –°–æ–∑–¥–∞–¥–∏–º OCR –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ
    ru_ocr = PaddleOCR(lang='ru', use_angle_cls=False)
    result = ru_ocr.ocr(russian_image)
    print(f"‚úÖ –†—É—Å—Å–∫–∏–π OCR –≤—ã–ø–æ–ª–Ω–µ–Ω, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    
    if result and result[0]:
        for line in result[0]:
            text = line[1][0]
            confidence = line[1][1]
            print(f"  üìù –ù–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç: '{text}' (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.2f})")
    else:
        print("‚ö†Ô∏è –†—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ OCR: {e}")
    print(f"üí° –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")

print("\nüèÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
