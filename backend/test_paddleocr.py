#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç PaddleOCR –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã
"""

import numpy as np
import cv2
from PIL import Image
import io

try:
    from paddleocr import PaddleOCR
    print("‚úÖ PaddleOCR –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ PaddleOCR: {e}")
    exit(1)

def test_paddleocr():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º PaddleOCR —Å –ø—Ä–æ—Å—Ç—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º"""
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PaddleOCR...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º PaddleOCR
        ocr = PaddleOCR(use_angle_cls=True, lang='ru')
        print("‚úÖ PaddleOCR –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º
    print("üñºÔ∏è –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
    
    # –ë–µ–ª—ã–π —Ñ–æ–Ω 400x200
    img = np.ones((200, 400, 3), dtype=np.uint8) * 255
    
    # –î–æ–±–∞–≤–ª—è–µ–º —á–µ—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
    cv2.putText(img, 'Test Text', (50, 100), cv2.FONT_HERSHEY_SIMPLEX, 2, (0, 0, 0), 3)
    
    print(f"üìä –†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {img.shape}, —Ç–∏–ø: {img.dtype}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º OCR
    try:
        print("üîç –ó–∞–ø—É—Å–∫ OCR...")
        result = ocr.ocr(img)
        
        print(f"‚úÖ OCR –≤—ã–ø–æ–ª–Ω–µ–Ω!")
        print(f"üìä –¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {type(result)}")
        print(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
        if result and len(result) > 0 and result[0]:
            print(f"üéØ –ù–∞–π–¥–µ–Ω–æ {len(result[0])} —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π")
            for i, line in enumerate(result[0]):
                if len(line) >= 2:
                    bbox = line[0]
                    text_info = line[1]
                    print(f"  {i+1}. bbox: {bbox}")
                    print(f"     text: {text_info}")
        else:
            print("‚ö†Ô∏è –¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ OCR: {e}")
        print(f"üìä –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e)}")
        return False

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PaddleOCR...")
    success = test_paddleocr()
    
    if success:
        print("üéâ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω!")
    else:
        print("üí• –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω!")
