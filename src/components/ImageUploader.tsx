import React, { useCallback } from 'react'
import { useDropzone } from 'react-dropzone'

interface ImageUploaderProps {
	onImageUpload: (file: File) => void
}

const ImageUploader: React.FC<ImageUploaderProps> = ({ onImageUpload }) => {
	const onDrop = useCallback(
		(acceptedFiles: File[]) => {
			if (acceptedFiles.length > 0) {
				const file = acceptedFiles[0]
				onImageUpload(file)
			}
		},
		[onImageUpload]
	)

	const { getRootProps, getInputProps, isDragActive } = useDropzone({
		onDrop,
		accept: {
			'image/*': ['.png', '.jpg', '.jpeg', '.gif', '.bmp', '.webp'],
		},
		multiple: false,
		maxSize: 10 * 1024 * 1024, // 10MB
	})

	return (
		<div className='my-8'>
			<div
				{...getRootProps()}
				className={`dropzone ${isDragActive ? 'dropzone--active' : ''}`}
			>
				<input {...getInputProps()} />
				<div className='flex flex-col items-center gap-4'>
					{isDragActive ? (
						<p className='text-lg font-medium text-blue-600'>
							–û—Ç–ø—É—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª –∑–¥–µ—Å—å...
						</p>
					) : (
						<>
							<div className='text-6xl opacity-70'>üì∑</div>
							<h3 className='text-2xl font-semibold text-gray-800'>
								–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º
							</h3>
							<p className='text-gray-600 text-lg'>
								–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞
							</p>
							<p className='text-sm text-gray-500 text-center leading-relaxed'>
								–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PNG, JPG, JPEG, GIF, BMP, WebP
								<br />
								–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10MB
							</p>
						</>
					)}
				</div>
			</div>
		</div>
	)
}

export default ImageUploader
