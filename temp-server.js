// –í—Ä–µ–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –Ω–∞ Node.js
const http = require('http')
const fs = require('fs')
const path = require('path')

const server = http.createServer((req, res) => {
	// CORS headers
	res.setHeader('Access-Control-Allow-Origin', '*')
	res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
	res.setHeader('Access-Control-Allow-Headers', 'Content-Type')

	if (req.method === 'OPTIONS') {
		res.writeHead(200)
		res.end()
		return
	}

	if (req.url === '/api/health') {
		res.writeHead(200, { 'Content-Type': 'application/json' })
		res.end(JSON.stringify({ status: 'healthy', message: 'Temp server OK' }))
		return
	}

	if (req.url === '/api/analyze-font' && req.method === 'POST') {
		res.writeHead(200, { 'Content-Type': 'application/json' })
		res.end(
			JSON.stringify({
				success: false,
				message: 'Python —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ò—Å–ø—Ä–∞–≤—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É Python.',
				matches: [],
				error: 'PYTHON_ERROR',
			})
		)
		return
	}

	res.writeHead(200, { 'Content-Type': 'application/json' })
	res.end(JSON.stringify({ message: 'Temporary server running' }))
})

const PORT = 8000
server.listen(PORT, () => {
	console.log(`üöÄ –í—Ä–µ–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`)
	console.log('‚ùó –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ. –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å Python.')
})

